worker_processes auto;

#错误日志也应该指定到咱们编译安装的nginx目录中
error_log /var/log/nginx/error.log warn;

pid /run/nginx.pid;

#Docker最终运行Nginx建议大家把后台进程关闭,默认是"on".
daemon off;

events {
    worker_connections 1024;
}

http {
    #自定义Nginx的日志格式
    log_format my_access_json '{"@timestamp":"$time_iso8601",'
                               '"host":"$server_addr",'
                   　　　　　　　'"clientip":"$remote_addr",'
                   　　　　　　  '"size":$body_bytes_sent,'
                   　　　　　　　'"responsetime":$request_time,'
                   　　　　　　　'"upstreamtime":"$upstream_response_time",'
                   　　　　　　　'"upstreamhost":"$upstream_addr",'
                   　　　　　　　'"http_host":"$host",'
                   　　　　　　　'"uri":"$uri",'
                   　　　　　　　'"domain":"$host",'
                   　　　　　　　'"xff":"$http_x_forwarded_for",'
                   　　　　　　　'"referer":"$http_referer",'
                   　　　　　　　'"tcp_xff":"$proxy_protocol_addr",'
                   　　　　　　　'"http_user_agent":"$http_user_agent",'
                   　　　　　　　'"status":"$status"}';
    #同理，我们将访问日志也放到咱们编译安装nginx的目录中
    error_log /var/log/nginx/error.log error;

    sendfile            on;
    keepalive_timeout   65;
    include       mime.types;
    default_type  text/html;
    charset utf-8;

    server {
        listen       8888;
        server_name  0.0.0.0;

        #别忘记修改站点代码的根目录也要指定到咱们编译安装nginx的目录中哟~
        location / {
            include uwsgi_params;
            uwsgi_pass flask:9191;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

    }
}